**Vehicle registration numbers

Use Javascript string's built in startsWith and endsWith methods to write a //
function that identify the origin of vehicle registration numbers.

Write functions called:

isFromBellville that returns true if a registration number is for Bellville//
 otherwise returns false. A registration number for Bellville starts with CY

isFromCapeTown that returns true if a registration number is for Cape Town//
 otherwise returns false. A registration number for Cape Town starts with CA.

isFromPaarl that returns true if a registration number is for Paarl otherwise//
 returns false. Paarl registration numbers starts with CJ.

isFromGauteng that returns true if a registration number is for Gauteng,//
 otherwise returns false. Gauteng registration numbers looks like this DR 12 TY GP.

isFromLimpopo that returns true if a registration number is for Limpopo//
 otherwise returns false. Limpopo registration numbers looks like this DRT 122 L.

**More parameters less repetition

If you create a function that takes 2 parameters, one for the registration//
 number and the other for the location indicator, you need fewer functions//
  to identify a registration number's location.


isFromPaarl('CJ 98912');
isFromBellville('CJ 98912');
isFromCapeTown('CA 98912');

//can be replaced with
const fromPaarl = isFrom('CJ 98912', 'CJ'); //returns true
const fromBellvile = isFrom('CJ 98912', 'CY'); //returns false

const fromBellville = isFrom('CY 874324', 'CY'); //returns true
const fromCapeTown = isFrom('CY 874324', 'CA'); //returns true

    Why is isFrom better? Discuss with someone else in your group.

Create the isFrom function. It should work for Western Cape and//
 Natal registration numbers.

Write a function called regCheck that can check if a registration number is//
 for GP, L, EC, MP registration plates.


var isGP = regCheck('DV 23 NB GP', 'GP');

//should print true
console.log(isGP);

var isMP = regCheck('DV 23 LP GP', 'MP');
//should print false
console.log(isMP);

// should return true
var isBellville = isFrom('CY189-012', 'CY');
//should return false
var isDurban = isFrom('CY189-012', 'ND');

**Dates:

Using the Javascript Date object to write the functions below.

This code contains some of the building logic you need for the functions.

const date = new Date('2010-04-01');
var weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday',//
 'Friday', 'Saturday', 'Saturday'];

//return index between 0 and 6
console.log(date.getDay());

//look up the week day text string from the Array
console.log(weekDays[date.getDay()]);

Write a function called isWeekday find out if the parameter passed in is a//
 day of the week (ie. Not a weekend day).

Write a function called yearsAgo that takes in a year and return how many//
 years ago that was. Use the Date objects getFullYear function.

Write a function called dayToday to find the day today. This function takes//
 no parameters;

Write a function called getDay which can find out which day of the week a//
 specific date was.

Write a function called sameWeekday that takes in two dates and check if//
 both dates have the same weekday. For example if both dates are a Monday//
  the function should return true.

**Review time

Ask a mentor to review the work you've done up until now. If the mentors//
 are satisfied with your progress they will assign more work to you.
